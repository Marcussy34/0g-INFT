
> 0g-inft-offchain-service@1.0.0 start
> ts-node index.ts

[dotenv@17.2.1] injecting env (8) from ../.env -- tip: üì° auto-backup env with Radar: https://dotenvx.com/radar
[dotenv@17.2.1] injecting env (13) from .env -- tip: ‚öôÔ∏è  specify custom .env file path with { path: '/custom/path/.env' }
üîó Blockchain initialized:
  - RPC URL: https://evmrpc-testnet.0g.ai
  - INFT Contract: 0x18db2ED477A25Aac615D803aE7be1d3598cdfF95
  - Oracle Contract: 0x567e70a52AB420c525D277b0020260a727A735dB
üîë Development keys loaded
  - Encrypted URI: 0g://storage/0x564d46858f7d4e79361efec80361aabb3647f19f361f4a8413970fc04d4907ff
  - Storage Root Hash: 0x564d46858f7d4e79361efec80361aabb3647f19f361f4a8413970fc04d4907ff
ü§ñ LLM configuration loaded:
  - Provider: ollama
  - Host: http://localhost:11434
  - Model: llama3.2:3b-instruct-q4_K_M
  - Temperature: 0.2
  - Max Tokens: 256
  - Dev Fallback: true
üîß LLM Circuit Breaker initialized:
  - Timeout: 20000ms
  - Error Threshold: 50%
  - Reset Timeout: 30000ms
Error: listen EADDRINUSE: address already in use :::3000
    at Server.setupListenHandle [as _listen2] (node:net:1939:16)
    at listenInCluster (node:net:1996:12)
    at Server.listen (node:net:2101:7)
    at Function.listen (/Users/marcus/Projects/0g-INFT/offchain-service/node_modules/express/lib/application.js:635:24)
    at INFTOffChainService.start (/Users/marcus/Projects/0g-INFT/offchain-service/index.ts:1457:14)
    at Object.<anonymous> (/Users/marcus/Projects/0g-INFT/offchain-service/index.ts:1480:13)
    at Module._compile (node:internal/modules/cjs/loader:1730:14)
    at Module.m._compile (/Users/marcus/Projects/0g-INFT/offchain-service/node_modules/ts-node/src/index.ts:1618:23)
    at node:internal/modules/cjs/loader:1895:10
    at Object.require.extensions.<computed> [as .ts] (/Users/marcus/Projects/0g-INFT/offchain-service/node_modules/ts-node/src/index.ts:1621:12) {
  code: 'EADDRINUSE',
  errno: -48,
  syscall: 'listen',
  address: '::',
  port: 3000
}
