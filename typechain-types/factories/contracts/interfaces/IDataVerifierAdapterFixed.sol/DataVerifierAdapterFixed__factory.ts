/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  DataVerifierAdapterFixed,
  DataVerifierAdapterFixedInterface,
} from "../../../../contracts/interfaces/IDataVerifierAdapterFixed.sol/DataVerifierAdapterFixed";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidDataFormat",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "lowLevelData",
        type: "bytes",
      },
    ],
    name: "OracleCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "VerificationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "OwnershipVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "TransferValidityVerified",
    type: "event",
  },
  {
    inputs: [],
    name: "getOracleAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "verifyOwnership",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "verifyTransferValidity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161055738038061055783398101604081905261002f9161009a565b6001600160a01b0381166100895760405162461bcd60e51b815260206004820152601d60248201527f4f7261636c6520616464726573732063616e6e6f74206265207a65726f000000604482015260640160405180910390fd5b6001600160a01b03166080526100ca565b6000602082840312156100ac57600080fd5b81516001600160a01b03811681146100c357600080fd5b9392505050565b6080516104666100f160003960008181607e0152818160ba01526101c601526104666000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063043153f3146100515780637dc0d1d014610079578063b18b78dd146100b8578063fbf8f606146100de575b600080fd5b61006461005f3660046102e3565b6100f1565b60405190151581526020015b60405180910390f35b6100a07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610070565b7f00000000000000000000000000000000000000000000000000000000000000006100a0565b6100646100ec3660046102e3565b610160565b6000808383604051610104929190610355565b60405180910390209050600061011a85856101bf565b9050817f534f7f6909082ad099f29609e0ed38709694b23258a55628d0d928b83900d94a82604051610150911515815260200190565b60405180910390a2949350505050565b6000808383604051610173929190610355565b60405180910390209050600061018985856101bf565b9050817fae01b59682be4d8be8c239d575966637fa9b8e15c317d95832da442a36a388be82604051610150911515815260200190565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166355c265fe60e01b8686604051602401610209929190610365565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161024791906103b8565b6000604051808303816000865af19150503d8060008114610284576040519150601f19603f3d011682016040523d82523d6000602084013e610289565b606091505b5091509150816102c6578051156102a257805160208201fd5b8060405163667a2f9960e01b81526004016102bd91906103d4565b60405180910390fd5b808060200190518101906102da9190610407565b95945050505050565b600080602083850312156102f657600080fd5b823567ffffffffffffffff8082111561030e57600080fd5b818501915085601f83011261032257600080fd5b81358181111561033157600080fd5b86602082850101111561034357600080fd5b60209290920196919550909350505050565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60005b838110156103af578181015183820152602001610397565b50506000910152565b600082516103ca818460208701610394565b9190910192915050565b60208152600082518060208401526103f3816040850160208701610394565b601f01601f19169190910160400192915050565b60006020828403121561041957600080fd5b8151801515811461042957600080fd5b939250505056fea264697066735822122010696b4214ddb98d796a441cc495f9033cdd603980367af591eccbaab806363964736f6c63430008180033";

type DataVerifierAdapterFixedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataVerifierAdapterFixedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DataVerifierAdapterFixed__factory extends ContractFactory {
  constructor(...args: DataVerifierAdapterFixedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _oracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_oracle, overrides || {});
  }
  override deploy(
    _oracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_oracle, overrides || {}) as Promise<
      DataVerifierAdapterFixed & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DataVerifierAdapterFixed__factory {
    return super.connect(runner) as DataVerifierAdapterFixed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataVerifierAdapterFixedInterface {
    return new Interface(_abi) as DataVerifierAdapterFixedInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DataVerifierAdapterFixed {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DataVerifierAdapterFixed;
  }
}
