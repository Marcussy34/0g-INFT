/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  DataVerifierAdapter,
  DataVerifierAdapterInterface,
} from "../../../../contracts/interfaces/IDataVerifierAdapter.sol/DataVerifierAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "OwnershipVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "TransferValidityVerified",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "_verifyWithHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOracleAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "verifyOwnership",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "verifyTransferValidity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161093838038061093883398101604081905261002f9161009a565b6001600160a01b0381166100895760405162461bcd60e51b815260206004820152601d60248201527f4f7261636c6520616464726573732063616e6e6f74206265207a65726f000000604482015260640160405180910390fd5b6001600160a01b03166080526100ca565b6000602082840312156100ac57600080fd5b81516001600160a01b03811681146100c357600080fd5b9392505050565b60805161082b61010d60003960008181609c0152818160d8015281816101b40152818161024c015281816103eb0152818161051401526105ac015261082b6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063043153f31461005c5780633843e8fd146100845780637dc0d1d014610097578063b18b78dd146100d6578063fbf8f606146100fc575b600080fd5b61006f61006a36600461065d565b61010f565b60405190151581526020015b60405180910390f35b61006f61009236600461065d565b61030f565b6100be7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161007b565b7f00000000000000000000000000000000000000000000000000000000000000006100be565b61006f61010a36600461065d565b61046f565b60008083836040516101229291906106cf565b6040518091039020905060006040858590501061023557604051633843e8fd60e01b81523090633843e8fd9061015e90889088906004016106df565b6020604051808303816000875af1925050508015610199575060408051601f3d908101601f191682019092526101969181019061070e565b60015b61022e57604051632ae132ff60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906355c265fe906101eb90889088906004016106df565b6020604051808303816000875af115801561020a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022e919061070e565b90506102c9565b604051632ae132ff60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906355c265fe9061028390889088906004016106df565b6020604051808303816000875af11580156102a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c6919061070e565b90505b817f534f7f6909082ad099f29609e0ed38709694b23258a55628d0d928b83900d94a826040516102fd911515815260200190565b60405180910390a29150505b92915050565b6000604082101561035c5760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a590819185d1848199bdc9b585d606a1b604482015260640160405180910390fd5b6000838361036b602082610737565b610376928290610758565b61037f91610782565b90506000848185610391602082610737565b9261039e93929190610758565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604051633d69655360e11b8152929350506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691637ad2caa6915061042390849086906004016107a0565b6020604051808303816000875af1158015610442573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610466919061070e565b95945050505050565b60008083836040516104829291906106cf565b6040518091039020905060006040858590501061059557604051633843e8fd60e01b81523090633843e8fd906104be90889088906004016106df565b6020604051808303816000875af19250505080156104f9575060408051601f3d908101601f191682019092526104f69181019061070e565b60015b61058e57604051632ae132ff60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906355c265fe9061054b90889088906004016106df565b6020604051808303816000875af115801561056a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058e919061070e565b9050610629565b604051632ae132ff60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906355c265fe906105e390889088906004016106df565b6020604051808303816000875af1158015610602573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610626919061070e565b90505b817fae01b59682be4d8be8c239d575966637fa9b8e15c317d95832da442a36a388be826040516102fd911515815260200190565b6000806020838503121561067057600080fd5b823567ffffffffffffffff8082111561068857600080fd5b818501915085601f83011261069c57600080fd5b8135818111156106ab57600080fd5b8660208285010111156106bd57600080fd5b60209290920196919550909350505050565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60006020828403121561072057600080fd5b8151801515811461073057600080fd5b9392505050565b8181038181111561030957634e487b7160e01b600052601160045260246000fd5b6000808585111561076857600080fd5b8386111561077557600080fd5b5050820193919092039150565b8035602083101561030957600019602084900360031b1b1692915050565b604081526000835180604084015260005b818110156107ce57602081870181015160608684010152016107b1565b506000606082850101526060601f19601f830116840101915050826020830152939250505056fea2646970667358221220f0502139316b7ef0f9064dcc44b79cd5d40dd3da4d12f64a76b65d5d60a5d0bd64736f6c63430008180033";

type DataVerifierAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataVerifierAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DataVerifierAdapter__factory extends ContractFactory {
  constructor(...args: DataVerifierAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _oracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_oracle, overrides || {});
  }
  override deploy(
    _oracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_oracle, overrides || {}) as Promise<
      DataVerifierAdapter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DataVerifierAdapter__factory {
    return super.connect(runner) as DataVerifierAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataVerifierAdapterInterface {
    return new Interface(_abi) as DataVerifierAdapterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DataVerifierAdapter {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DataVerifierAdapter;
  }
}
